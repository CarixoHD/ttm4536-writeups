BITS 64
DEFAULT REL
SECTION .text
GLOBAL  stub_start

%define XOR_KEY        {{ XOR_KEY_PLACE}}            
%define PAYLOAD_SIZE   {{ PAYLOAD_SIZE_PLACE }}      

%define PAGE_SIZE      4096
%define PROT_RWX       7
%define SYS_mprotect   10

stub_start:
        lea     rdi, [rel payload]     ; rdi = &payload
        mov     rax, rdi
        and     rax, -(PAGE_SIZE)      ; rax = page-aligned addr
        mov     rdi, rax               ; arg1 = addr
        mov     rsi, ( (PAYLOAD_SIZE + PAGE_SIZE - 1) & -(PAGE_SIZE) )
                                        ; arg2 = length (page-rounded)
        mov     edx, PROT_RWX          ; arg3 = prot bits
        mov     eax, SYS_mprotect
        syscall                        ; ignore errno

        lea     rsi, [rel payload]     
        mov     ecx, PAYLOAD_SIZE
        mov     al,  XOR_KEY
.decrypt_loop:
        xor     byte [rsi], al
        inc     rsi
        loop    .decrypt_loop


stub_end:

payload:
        incbin "encrypted_blob.bin"
; -------------------------------------------------------------------
